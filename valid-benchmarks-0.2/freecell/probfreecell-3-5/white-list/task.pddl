(define (problem freecell-3-5)                       (:domain freecell)                       (:objects n12 - object
s2 - object
n2 - object
n11 - object
n5 - object
n0 - object
d0 - object
sa - object
c0 - object
h3 - object
n4 - object
n6 - object
ca - object
d3 - object
s3 - object
h0 - object
s - object
c - object
n1 - object
d - object
d2 - object
s0 - object
n3 - object
h2 - object
n7 - object
n8 - object
c3 - object
n9 - object
h - object
c2 - object
da - object
n13 - object
ha - object
n10 - object)                        (:init (value-copy c0 n0)
(value h0 n0)
(on-copy s3 ha)
(unlock-origin-domain )
(on c3 s2)
(suit-copy da d)
(canstack-copy c2 h3)
(clear-copy h2)
(on h2 s3)
(canstack-copy sa d2)
(value-copy d3 n3)
(bottomcol sa)
(canstack sa h2)
(value c0 n0)
(suit d3 d)
(value-copy c2 n2)
(suit d0 d)
(successor-copy n7 n6)
(bottomcol-copy c2)
(canstack d2 c3)
(value-copy h3 n3)
(canstack ha c2)
(canstack-copy h2 c3)
(value ha n1)
(value d3 n3)
(successor-copy n13 n12)
(value c2 n2)
(canstack d2 s3)
(successor-copy n2 n1)
(clear-copy ca)
(value h3 n3)
(suit-copy ha h)
(home-copy c0)
(clear-copy c3)
(canstack ca h2)
(clear h3)
(successor n5 n4)
(canstack-copy da c2)
(home d0)
(suit-copy c3 c)
(canstack-copy da s2)
(canstack-copy s2 h3)
(on-copy da sa)
(value-copy sa n1)
(suit s2 s)
(bottomcol s2)
(cellspace-copy n4)
(canstack-copy s2 d3)
(colspace n1)
(suit-copy c2 c)
(clear-copy c2)
(successor n6 n5)
(successor-copy n4 n3)
(suit-copy d2 d)
(value-copy c3 n3)
(suit-copy h2 h)
(value sa n1)
(suit-copy ca c)
(value s0 n0)
(bottomcol-copy h3)
(on ca d3)
(canstack-copy sa h2)
(value-copy s3 n3)
(bottomcol-copy d3)
(bottomcol ha)
(value c3 n3)
(clear-copy da)
(canstack h2 s3)
(home-copy h0)
(suit-copy s0 s)
(canstack-copy d2 c3)
(bottomcol d2)
(on s3 ha)
(canstack-copy ha c2)
(suit-copy sa s)
(value s3 n3)
(successor-copy n6 n5)
(canstack ha s2)
(canstack-copy d2 s3)
(suit-copy c0 c)
(bottomcol-copy sa)
(suit da d)
(value-copy h2 n2)
(canstack ca d2)
(clear-copy h3)
(suit-copy d0 d)
(home-copy s0)
(successor n12 n11)
(suit-copy h3 h)
(value h2 n2)
(on-copy h2 s3)
(value-copy da n1)
(value-copy d0 n0)
(suit-copy h0 h)
(clear h2)
(suit-copy s3 s)
(clear d2)
(value da n1)
(bottomcol-copy s2)
(value d0 n0)
(successor n1 n0)
(canstack c2 d3)
(successor-copy n5 n4)
(canstack-copy h2 s3)
(suit c3 c)
(successor n8 n7)
(successor-copy n12 n11)
(successor n9 n8)
(successor n3 n2)
(canstack-copy ha s2)
(successor n10 n9)
(clear ca)
(bottomcol-copy ha)
(suit d2 d)
(suit h2 h)
(value-copy d2 n2)
(bottomcol-copy d2)
(home-copy d0)
(successor-copy n1 n0)
(value-copy s2 n2)
(canstack-copy ca h2)
(canstack-copy ca d2)
(successor n11 n10)
(successor-copy n8 n7)
(successor-copy n9 n8)
(value d2 n2)
(successor n7 n6)
(suit s0 s)
(home c0)
(suit-copy d3 d)
(suit sa s)
(value s2 n2)
(on-copy c3 s2)
(successor-copy n10 n9)
(on-copy ca d3)
(value-copy ca n1)
(successor n13 n12)
(successor n2 n1)
(bottomcol c2)
(colspace-copy n1)
(clear da)
(on da sa)
(value-copy ha n1)
(value ca n1)
(clear-copy d2)
(canstack-copy c2 d3)
(suit ha h)
(successor-copy n11 n10)
(canstack c2 h3)
(canstack sa d2)
(suit h3 h)
(suit-copy s2 s)
(suit h0 h)
(suit c2 c)
(canstack h2 c3)
(home h0)
(successor n4 n3)
(suit s3 s)
(cellspace n4)
(clear c3)
(suit ca c)
(canstack da c2)
(value-copy s0 n0)
(clear c2)
(canstack da s2)
(value-copy h0 n0)
(canstack s2 h3)
(successor-copy n3 n2)
(canstack s2 d3)
(bottomcol h3)
(home s0)
(bottomcol d3)
(suit c0 c))                        (:goal (and
		(home c3)
		(home d3)
		(home h3)
		(home s3)
		(invalid )))                        )