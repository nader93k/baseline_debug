(define (problem freecell3-4)                       (:domain freecell)                       (:objects heart3 - object
n2 - object
n1 - object
spade3 - object
diamond0 - object
diamond2 - object
club - object
spadea - object
hearta - object
spade2 - object
spade0 - object
n3 - object
n0 - object
n5 - object
heart2 - object
diamonda - object
spade - object
diamond - object
club2 - object
diamond3 - object
cluba - object
heart0 - object
club0 - object
heart - object
n4 - object
club3 - object)                        (:init (unlock-origin-domain )
(on cluba diamonda)
(canstack-copy spade2 diamond3)
(on-copy heart3 diamond2)
(suit spade0 spade)
(value spade0 n0)
(suit diamond0 diamond)
(clear-copy heart3)
(canstack-copy diamond2 club3)
(home-copy club0)
(suit-copy club3 club)
(colspace-copy n0)
(canstack heart2 spade3)
(successor-copy n2 n1)
(canstack club2 heart3)
(on-copy spade3 heart2)
(on spade2 club3)
(canstack-copy spade2 heart3)
(on-copy heart2 hearta)
(canstack-copy spadea diamond2)
(value-copy spadea n1)
(home diamond0)
(successor n5 n4)
(canstack-copy hearta club2)
(value-copy diamonda n1)
(canstack club2 diamond3)
(value-copy club2 n2)
(cellspace-copy n2)
(value spadea n1)
(value diamonda n1)
(canstack diamonda spade2)
(clear-copy spade2)
(successor-copy n4 n3)
(value club2 n2)
(bottomcol hearta)
(home spade0)
(suit diamonda diamond)
(suit-copy spade2 spade)
(suit spadea spade)
(bottomcol spadea)
(value-copy club0 n0)
(suit club2 club)
(on heart3 diamond2)
(clear-copy cluba)
(suit-copy spade3 spade)
(clear-copy spade3)
(home-copy diamond0)
(value-copy spade3 n3)
(canstack-copy club2 heart3)
(value club0 n0)
(clear club2)
(bottomcol club3)
(value-copy club3 n3)
(suit-copy spade0 spade)
(value spade3 n3)
(suit-copy cluba club)
(value-copy diamond2 n2)
(value club3 n3)
(on spade3 heart2)
(on heart2 hearta)
(suit club3 club)
(canstack cluba diamond2)
(suit-copy diamond2 diamond)
(canstack-copy diamonda spade2)
(canstack-copy diamonda club2)
(bottomcol diamond2)
(value-copy diamond0 n0)
(suit heart3 heart)
(value diamond2 n2)
(suit diamond3 diamond)
(canstack cluba heart2)
(suit-copy club0 club)
(value diamond0 n0)
(successor n1 n0)
(clear heart3)
(canstack spadea heart2)
(value-copy spade2 n2)
(successor-copy n5 n4)
(canstack diamond2 club3)
(suit heart2 heart)
(bottomcol diamonda)
(bottomcol-copy hearta)
(on-copy club2 diamond3)
(successor n3 n2)
(value-copy heart0 n0)
(bottomcol-copy spadea)
(on-copy diamond3 spadea)
(cellspace n2)
(canstack heart2 club3)
(home heart0)
(suit-copy hearta heart)
(value-copy hearta n1)
(suit heart0 heart)
(canstack-copy heart2 spade3)
(value-copy heart3 n3)
(home club0)
(suit-copy diamonda diamond)
(suit spade2 spade)
(value heart0 n0)
(successor-copy n1 n0)
(canstack diamond2 spade3)
(value hearta n1)
(canstack-copy club2 diamond3)
(canstack hearta spade2)
(value heart3 n3)
(suit-copy diamond0 diamond)
(bottomcol-copy club3)
(canstack-copy cluba diamond2)
(value-copy cluba n1)
(on-copy cluba diamonda)
(home-copy spade0)
(suit spade3 spade)
(value-copy heart2 n2)
(canstack-copy cluba heart2)
(successor n2 n1)
(value cluba n1)
(canstack-copy spadea heart2)
(canstack spade2 diamond3)
(value heart2 n2)
(bottomcol-copy diamond2)
(suit cluba club)
(home-copy heart0)
(colspace n0)
(clear cluba)
(value-copy diamond3 n3)
(clear spade3)
(on-copy spade2 club3)
(suit diamond2 diamond)
(canstack-copy heart2 club3)
(suit-copy heart3 heart)
(value spade2 n2)
(successor n4 n3)
(suit-copy diamond3 diamond)
(value diamond3 n3)
(bottomcol-copy diamonda)
(on club2 diamond3)
(suit club0 club)
(suit-copy spadea spade)
(canstack spade2 heart3)
(canstack-copy diamond2 spade3)
(on diamond3 spadea)
(clear-copy club2)
(canstack spadea diamond2)
(canstack-copy hearta spade2)
(canstack hearta club2)
(suit-copy heart2 heart)
(suit-copy club2 club)
(clear spade2)
(successor-copy n3 n2)
(canstack diamonda club2)
(suit hearta heart)
(suit-copy heart0 heart)
(value-copy spade0 n0))                        (:goal (and
		(home diamond3)
		(home club3)
		(home heart3)
		(home spade3)
		(invalid )))                        )